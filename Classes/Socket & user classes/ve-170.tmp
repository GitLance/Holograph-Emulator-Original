Imports System
Imports System.Net
Imports System.Net.Sockets
Imports System.Text
Public Class clsHoloUSER
#Region "User server objects"
    '// Socket
    Friend holoSocket As Socket '// Users socket instance
    Friend holoAsyncCallback As AsyncCallback
    Friend socketID As Integer '// Users socket ID
    Friend _UserID As Long '// Users ID in database
    Friend _conStatus As Byte '// Users connection status
    Friend _receivedFurniIndex As Boolean '// Users 'if has received the furniture index packet' boolean
    Private byteDataGroup(1024) As Byte 'U// Datapacket

    '// Room
    Friend _guestRoom As Long
    Friend _publicRoom As Byte
    Friend _guestMapSlot As Integer
    Friend _isOwner As Boolean
    Friend _hasRights As Boolean
    '// Walking
    Friend _PosX As Integer
    Friend _PosY As Integer
    Friend _PosH As String
    Friend _DestX As Integer
    Friend _DestY As Integer
    '// Actions
    Friend _rotBody As Integer
    Friend _rotHead As Integer
    Friend _Actions(5) As Byte
    Friend _handSub As Integer
#End Region
#Region "User details"
    Friend UserID As Long
    Friend Name As String
    Friend Mission As String
    Friend Sex As Char
    Friend Figure As String
    Friend showBadge As Boolean
    Friend nowBadge As String
    Friend Rank As Byte
    Friend Credits As Integer
    Friend Tickets As Integer
    Friend ClubDays As Integer
#End Region
#Region "User class setup"
    Public Sub setupUserClass(ByVal mySocketID As Integer, ByVal myHoloSocket As Socket) '// Create a new instance of HoloUSER and accept connection handling (@@ packet etc)
        'Try
        holoSocket = myHoloSocket
        socketID = mySocketID
        HoloMANAGERS.hookedClients.Add(socketID, myHoloSocket)

        Console.WriteLine("[SCKMGR] Established new connection with " & holoSocket.RemoteEndPoint.ToString & " for socket [" & socketID & "]")
        transData("@@" + sysChar(1))

        listenDataArrivals()

        'Catch ex As Exception
        '  Console.WriteLine("[SCKMGR] Error on establishing new connection with " & holoSocket.RemoteEndPoint.ToString & " for socket [" & socketID & "], error thrown was: " & ex.Message)

        'End Try
    End Sub
#End Region
#Region "User data reading/reading with socket"
    Private Sub listenDataArrivals()
        If holoSocket.Connected = False Then '// If the socket has closed in the meantime, or this callback is empty and appeared here, kill this connection
            killConnection()
        Else
            holoSocket.BeginReceive(byteDataGroup, 0, byteDataGroup.Length, SocketFlags.None, New System.AsyncCallback(AddressOf dataArrivalCallback), 0) '// Set a pending data listener, who hits back to dataArrivalCallback when data is arrived =]
        End If
    End Sub
    Private Sub dataArrivalCallback(ByVal arrivalCallback As IAsyncResult)
        If holoSocket.Connected = True Then '// If the socket who sends data is connected
            Try
                Dim bytesReceived As Integer = Me.holoSocket.EndReceive(arrivalCallback) '// Stop the callback and get the bytes received
                If bytesReceived = 0 Then killConnection() : Exit Sub '// Uh oh, we haven't received any bytes, disconnect him!

                Dim strData As String = Encoding.ASCII.GetString(byteDataGroup, 0, byteDataGroup.Count) '// Convert the byte group to a string
                Console.WriteLine("[SCKMGR] [" & socketID & " >>] " & strData) '// Just print the arrived data for debugging =]

            Catch ex As Exception '// Mofo's, an error! Red alert!
                Console.WriteLine("[SCKMGR] Error on data arrival of " & holoSocket.RemoteEndPoint.ToString & " for socket [" & socketID & "], error thrown was: " & ex.Message) '// Print that there was an error

            Finally
                listenDataArrivals() '// Error or not, we'll listen for new arrivals again!

            End Try
        Else
            killConnection() '// No connection, then kill this connection
        End If
    End Sub
    Private Sub transData(ByVal strData As String)
        Dim dataByteGroup(1024) As Byte

        'Try
        '// Encode the strData to a byte group
        dataByteGroup = Encoding.ASCII.GetBytes(strData)
        holoSocket.BeginSend(dataByteGroup, 0, dataByteGroup.Length, vbNull, New AsyncCallback(AddressOf transDataCallback), 0)

        'Catch ex As Exception
        ' Call Console.WriteLine("[SCKMGR] Socket start data sending error, error thrown was: " & ex.Message)

        'End Try
    End Sub
    Private Sub transDataCallback(ByVal ar As IAsyncResult)
        'Try



        'Catch ex As Exception
        'Call Console.WriteLine("[SCKMGR] Socket complete data sending error, error thrown was: " & ex.Message)

        'End Try
    End Sub
#End Region
    Private Sub killConnection()
        holoSocket.Close() '// Close the connection
        If HoloMANAGERS.hookedClients.Contains(holoSocket) Then HoloMANAGERS.hookedClients.Remove(holoSocket) '// Remove the socket/class from the hashtable (if it exists)
        HoloUSER(socketID) = Nothing '// Destroy the class (this one)
    End Sub
End Class
